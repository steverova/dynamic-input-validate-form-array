import { useId, useState } from 'react';
import {
  Box,
  Button,
  Container,
  Divider,
  InputAdornment,
  TextField,
} from '@mui/material';

function App() {
  const element = {
    id: '',
    description: '',
    average: '',
    quantity: '',
    date: '',
  };

  const initialFormFields = [
    {
      id: '',
      description: '',
      average: '',
      quantity: '',
      elements: [element],
    },
  ];

  const keyID = useId();

  const [formFields, setFormFields] = useState(initialFormFields);
  const [data, setData] = useState('');
  const [expandedRows, setExpandedRows] = useState(
    Array(initialFormFields.length).fill(false)
  );

  const onChangeEvent = (event, index) => {
    const name = event.target.name;
    const value = event.target.value;
    const updatedFormFields = [...formFields];
    updatedFormFields[index][name] = value;
    setFormFields(updatedFormFields);
  };

  const submit = (event) => {
    event.preventDefault();
    setData(JSON.stringify(formFields));
  };

  const addFields = (event) => {
    event.preventDefault();
    setFormFields([...formFields, { ...initialFormFields[0] }]);
    setExpandedRows([...expandedRows, false]);
  };

  const open = (index) => {
    const updatedExpandedRows = [...expandedRows];
    updatedExpandedRows[index] = !updatedExpandedRows[index];
    setExpandedRows(updatedExpandedRows);
  };

  return (
    <Box className="">
      <Box className="">
        <Container className="py-8" maxWidth="lg">
          <Box className=" gap-4 mt-4">
            {formFields.map((form, index) => (
              <Box
                key={keyID}
                className="bg-white rounded-lg shadow-md  border-solid border-2 border-slate-100 p-4 flex flex-col w-full mb-4">
                <Box className="flex flex-row">
                  <TextField
                    size={'small'}
                    variant="outlined"
                    placeholder="Description"
                    name="description"
                    onChange={(event) => onChangeEvent(event, index)}
                    value={form.description || ''}
                    className="w-full  mb-2 px-2"
                    style={{ padding: '4px' }}
                  />
                  <TextField
                    type=""
                    size={'small'}
                    variant="outlined"
                    InputProps={{
                      endAdornment: (
                        <InputAdornment position="start">%</InputAdornment>
                      ),
                    }}
                    placeholder="Average"
                    name="average"
                    onChange={(event) => onChangeEvent(event, index)}
                    value={form.average || ''}
                    className="w-full  mb-2"
                    style={{ padding: '4px' }}
                  />
                  <TextField
                    size={'small'}
                    variant="outlined"
                    type="number"
                    placeholder="Quantity"
                    name="quantity"
                    onChange={(event) => onChangeEvent(event, index)}
                    value={form.quantity || ''}
                    className="w-full mb-2"
                    style={{ padding: '4px' }}
                  />
                  <Box
                    onClick={() => open(index)}
                    className="flex border-2 rounded-full justify-center items-center  cursor-pointer hover:bg-slate-100 p-1  ms-2">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      fill="none"
                      viewBox="0 0 24 24"
                      strokeWidth={1.5}
                      size={24}
                      stroke="currentColor"
                      className="w-9 h-6 ">
                      <path
                        strokeLinecap="round"
                        strokeLinejoin="round"
                        d="M19.5 8.25l-7.5 7.5-7.5-7.5"
                      />
                    </svg>
                  </Box>
                </Box>
                <Box>
                  {expandedRows[index] && (
                    <Box className="flex flex-col bg-gray-100 mt-2 p-2 w-full">
                      <p>Contenido adicional aqu√≠...</p>
                    </Box>
                  )}
                </Box>
              </Box>
            ))}
            <Button
              onClick={addFields}
              className="mb-"
              variant="contained"
              color="primary">
              Nueva entrada
            </Button>
          </Box>
          <Divider sx={{marginTop: '20px', marginBottom: '20px'}} />
          <Button
            onClick={submit}
            variant="contained"
            color="secondary">
            Agregar
          </Button>

          <p>{data}</p>
        </Container>
      </Box>
    </Box>
  );
}

export default App;
